@model LoginViewModel

@{
    ViewBag.Title = "User Login";
}

<div class="row">
    <div class="col-md-6">
        <h1>Local Account Login</h1>
        <hr />
        <form method="post">
            <div asp-validation-summary="All" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Email"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Password"></label>
                <input asp-for="Password" class="form-control" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="form-group">
                <div class="checkbox">
                    <label asp-for="RememberMe">
                        <input asp-for="RememberMe" />
                        @Html.DisplayNameFor(m => m.RememberMe)
                    </label>
                </div>
            </div>
            <button type="submit" class="btn btn-primary">Login</button>
        </form>
    </div>
    <div class="col-md-6">
        <h1>External Login</h1>
        <hr />
        @{
            if (Model.ExternalLogins.Count == 0)
            {
                <div>No external logins configured</div>
            }
            else
            {
                <form method="post" asp-action="ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl">
                    <div>
                        @*1. We are looping through each external login provider we have in Model.ExternalLogins
                        2. For each external login provider a submit button is dynamically generated
                        3. At the moment we only have one external identity provider configured and that is Google, so we 
                            get one Submit button.
                        4. This submit button is inside a form. The form method attribute value is post and 
                            asp-action attribute value is ExternalLogin
                        5. So when the submit button is clicked the form is posted to ExternalLogin action in AccountController
                        6. The login provider is Google, so in the foreach loop, provider.Name returns Google.*@
                        @foreach (var provider in Model.ExternalLogins)
                        {
                            <button type="submit" class="btn btn-primary"
                                    name="provider" value="@provider.Name"
                                    title="Log in using your @provider.DisplayName account">
                                @provider.DisplayName
                            </button>
                        }
                    </div>
                </form>
            }
        }
    </div>
    </div>

    @*Session Cookie vs Persistent Cookie

        Upon a successful login, a cookie is issued and this cookie is sent with each request to the server. The server uses
            this cookie to know that the user is already authenticated and logged-in. This cookie can either be a session cookie
            or a persistent cookie.

        A session cookie is created and stored within the session instance of the browser. A session cookie does not contain an
            expiration date and is permanently deleted when the browser window is closed.

        A persistent cookie on the other hand is not deleted when the browser window is closed. It usually has an expiry date
            and deleted on the date of expiry.*@
